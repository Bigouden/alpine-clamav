include:
  - project: 'Bigouden/gitlab-ci-templates'
    file: '.gitlab-ci-docker.yml'
    
stages:
  - Quality
  - Build
  - Test
  - Inspect
  - Release
  
EXE Virus:
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run -d --name TEST $CONTAINER_TEST_IMAGE 
    - |
      for i in `seq 60`
      do
          HEALTH=$(docker inspect -f "{{.State.Health.Status}}" TEST)
          if [ ${HEALTH} != "healthy" ]
          then
              echo "Container Unhealthy"
              sleep 5
          else
              echo "Container Healthy"
              break
          fi
      done
    - docker exec TEST wget -O /tmp/eicar $EICAR_URL
    - docker exec TEST clamdscan /tmp/eicar || code=$?; if [ $code -eq 1 ]; then echo "Detection OK"; else exit $code; fi
  variables:
    GIT_STRATEGY: none
    EICAR_URL: https://secure.eicar.org/eicar.com

TXT Virus:
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run -d --name TEST $CONTAINER_TEST_IMAGE 
    - |
      for i in `seq 60`
      do
          HEALTH=$(docker inspect -f "{{.State.Health.Status}}" TEST)
          if [ ${HEALTH} != "healthy" ]
          then
              echo "Container Unhealthy"
              sleep 5
          else
              echo "Container Healthy"
              break
          fi
      done
    - docker exec TEST wget -O /tmp/eicar $EICAR_URL
    - docker exec TEST clamdscan /tmp/eicar || code=$?; if [ $code -eq 1 ]; then echo "Detection OK"; else exit $code; fi
  variables:
    GIT_STRATEGY: none
    EICAR_URL: https://secure.eicar.org/eicar.com.txt

ZIP Virus:
  stage: Test
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run -d --name TEST $CONTAINER_TEST_IMAGE 
    - |
      for i in `seq 60`
      do
          HEALTH=$(docker inspect -f "{{.State.Health.Status}}" TEST)
          if [ ${HEALTH} != "healthy" ]
          then
              echo "Container Unhealthy"
              sleep 5
          else
              echo "Container Healthy"
              break
          fi
      done
    - docker exec TEST wget -O /tmp/eicar $EICAR_URL
    - docker exec TEST clamdscan /tmp/eicar || code=$?; if [ $code -eq 1 ]; then echo "Detection OK"; else exit $code; fi
  variables:
    GIT_STRATEGY: none
    EICAR_URL: https://secure.eicar.org/eicar_com.zip
    
DockerHub:
  stage: Release
  before_script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_VERSION_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $DOCKER_HUB_LATEST_IMAGE
    - docker push $DOCKER_HUB_VERSION_IMAGE
    - docker push $DOCKER_HUB_LATEST_IMAGE
  variables:
    GIT_STRATEGY: none
    DOCKER_HUB_VERSION_IMAGE: bigouden/alpine-clamav:$CI_COMMIT_REF_NAME
    DOCKER_HUB_LATEST_IMAGE: bigouden/alpine-clamav:latest
  when: manual